{
  "name": "connect-image-proxy",
  "version": "0.0.5",
  "description": "Middleware for proxying and manipulating images.",
  "keywords": [
    "images",
    "proxy",
    "graphicsmagick",
    "express",
    "middleware",
    "connect",
    "server-side"
  ],
  "homepage": "https://github.com/mysociety/node-connect-image-proxy",
  "bugs": {
    "url": "https://github.com/mysociety/node-connect-image-proxy/issues"
  },
  "contributors": [
    {
      "name": "Chetan Bansal",
      "email": "chetan1@gmail.com"
    },
    {
      "name": "Edmund von der Burg",
      "email": "evdb@mysociety.org",
      "url": "http://www.mysociety.org/"
    }
  ],
  "main": "connect-image-proxy",
  "repository": {
    "type": "git",
    "url": "http://github.com/mysociety/node-connect-image-proxy.git"
  },
  "dependencies": {
    "gm": ">= 1.3.0",
    "mime": ">= 1.2.4",
    "temp": ">= 0.4.0"
  },
  "devDependencies": {
    "express": ">=2 <3",
    "jade": ">= 0.25.0"
  },
  "engines": {
    "node": "*"
  },
  "readme": "# Middleware for proxying and manipulating images\n\nThis module allows you to manipulate and convert images on the fly.\n\nIt provides:\n\n  * Resizing of images\n  * Conversion of images to grayscale\n  * Conversion of images into different formats\n  * Only proxies images from the same domain that the proxy is running on - not an open proxy (this could be easily changed in future)\n\n\n## Installation\n\n    npm install connect-image-proxy\n\nand then in your code (eg an Express app):\n\n    var image_proxy = require('connect-image-proxy');\n\n    app.configure(function(){\n      ....\n\n      // mount the proxy at '/proxy'\n      app.use( '/proxy', image_proxy() );\n      ....\n    });\n\n\n## Usage\n\n  * Resize: hostname/route/?url=[url]&resize=1&height=[height]&width=[width]\n  * Grayscale: hostname/route/?url=[url]&grayscale=1\n  * Conversion [JPG, PNG, GIF]: hostname/route/?url=[url]&format=[format]\n  * Conversion + Grayscale + Resize: hostname/route/?url=[url]&format=png&grayscale=1&resize=1&height=[height]&width=[width]\n\n\n## Example app\n\nThere is an example app in the `examples` folder that demonstrates the basic features.\n\n\n## TODO\n\n  * Allow user to specify a list of hostnames to proxy for, not just the same host as the proxy is running on.\n  * Add proper caching headers, or at least repeat the cache headers of the original image.",
  "readmeFilename": "README.md",
  "_id": "connect-image-proxy@0.0.5",
  "dist": {
    "shasum": "2c6e7b0f9bcb3d441e2dddc9ffc0003fe6e1656f"
  },
  "_from": "connect-image-proxy@*",
  "_resolved": "https://registry.npmjs.org/connect-image-proxy/-/connect-image-proxy-0.0.5.tgz"
}
